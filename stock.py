# -*- coding: utf-8 -*-
"""stock.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/108yigCgWZSwPez19iCluGW_evMsFTeD_
"""

#Import the libraries
from sklearn.svm import SVR
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
plt.style.use('fivethirtyeight')

#Load the data
from google.colab import files
files.upload()

df = pd.read_csv('stock.csv')

#Show the data
df

df.shape

actual_price = df.tail(1)
actual_price

#prepare the data for training the SVR models
#Get all of the data except for the last row
df = df.head(len(df)-1600)
#Print the new data set
print(df)

#Create empty lists to store the independent and dependent data
days = list()
adj_close_prices = list()

#Get the dates and adjusted close prices
df_days = df.loc[:,'Date']
df_adj_close = df.loc[:,'Adj Close Price']

#Create the independent data set
for day in df_days:
  days.append([int(day.split('/')[1])])
  #Create the dependent data set
  for adj_close_price in df_adj_close:
    adj_close_prices.append(float(adj_close_price))

#Print the days and the adj close prices
print(days)
print(adj_close_prices)

#Create the 3 Support Vector,Regression Models
#Create and train a SVR model using a linear kernel
lin_svr = SVR(kernel='linear',C=1000.0)
lin_svr.fit(days, adj_close_prices)

poly_svr = SVR(kernel='poly',C=1000.0,degree =2)
poly_svr.fit(days,adj_close_prices)

rbf_svr = SVR(kernel='rbf',C=1000.0,gamma=0.15)
rbf_svr.fit(days,adj_close_prices)

plt.figure(figsize=(16.8))
plt.scatter(days, adj_close_prices, color ='red',label = 'Data')
plt.plot(days,rbf_svr.predict(days),color='green',label='RBF Model1')
plt.plot(days,poly_svr.predict(days),color='green',label='RBF Model1')
plt.plot(days,lin_svr.predict(days),color='green',label='RBF Model1')
plt.legend()
plt.show()

#Show the predicted price for the given day
day =[[31]]

print('The RBF SVR predicted:',rbf_svr.predict(day))
print('The Linear SVR predicted:',lin_svr.predict(day))
print('The Polynomial SVR predicted:',poly_svr.predict(day))

print('The actual price:',actual_price['Adj Close Price'][21])